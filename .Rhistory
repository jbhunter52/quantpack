View(get_bt2)
View(get_bt2)
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
bt
data.frame(stock1 = s1,
stock2 = s2)
View(get_bt2)
pairs_split <- data.frame(stock1 = s1,
stock2 = s2)
bt <- get_bt2(pairs_split,prices, .summary = FALSE)
bt
bt <- lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%as_tibble()
lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%as_tibble()
lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble()
prices <- universe_prices %>%
filter(ticker %in% c(s1, s2)) %>%
filter(between(date, as.Date('2021-11-1'), as.Date('2022-12-31'))) %>%
select(-unadjusted_close, -isUniverse)
bt <- get_bt2(pairs_split,prices, .summary = FALSE)
bt
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>% pull(ret)
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>% pull(cumsum(ret))
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret))
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
View(bt)
bt <- get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret))
lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble()
bt <- lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble()
bt <- lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble() %>%
# Some of the data had prices, then a few zeros, then prices SG is an example
group_by(stock1, stock2) %>%
ftransform(minclose1 = close1) %>%
ftransform(minclose2 = close2) %>%
TRA(fmin(fselect(., minclose1, minclose2), keep.group_vars = FALSE), "replace_fill") %>%
fsubset(minclose1 > 0 & minclose2 > 0) %>%
ftransform(month = month(date)) %>%
ftransform(year = lubridate::year(date)) %>%
# get lsr
ftransform(ratiospread = ifelse(close2 == 0, 0, close1/close2)) %>%
ftransform(spreadclose = log(close1) - log(close2)) %>%
group_by(stock1, stock2) %>%
mutate(sma20 = roll_meanr(spreadclose, n=20)) %>%
mutate(sd20  = roll_sdr(spreadclose, n=20)) %>%
mutate(zscore = ifelse(sd20 == 0, 0, (spreadclose-sma20)/sd20)) %>%
mutate(log_return = log(ratiospread)-log(lag(ratiospread,1))) %>%
mutate(signal = -pairs_trade_signal(zscore, 2.0)) %>%
mutate(daysintrade = pairs_trade_days(signal)) %>%
mutate(trade_id = pairs_trade_id(daysintrade)) %>%
mutate(ret = ifelse(daysintrade > 0, log_return * lag(signal),0)) %>%
#filter(trade_id > 0) %>%
filter(year(date) == lubridate::year(date)) %>%
mutate(month = month(date)) %>%
filter(year == thisyear) %>%
drop_na()
bt <- lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble() %>%
# Some of the data had prices, then a few zeros, then prices SG is an example
group_by(stock1, stock2) %>%
ftransform(minclose1 = close1) %>%
ftransform(minclose2 = close2) %>%
TRA(fmin(fselect(., minclose1, minclose2), keep.group_vars = FALSE), "replace_fill") %>%
fsubset(minclose1 > 0 & minclose2 > 0) %>%
ftransform(month = month(date)) %>%
ftransform(year = lubridate::year(date)) %>%
# get lsr
ftransform(ratiospread = ifelse(close2 == 0, 0, close1/close2)) %>%
ftransform(spreadclose = log(close1) - log(close2)) %>%
group_by(stock1, stock2) %>%
mutate(sma20 = roll_meanr(spreadclose, n=20)) %>%
mutate(sd20  = roll_sdr(spreadclose, n=20)) %>%
mutate(zscore = ifelse(sd20 == 0, 0, (spreadclose-sma20)/sd20)) %>%
mutate(log_return = log(ratiospread)-log(lag(ratiospread,1))) %>%
mutate(signal = -pairs_trade_signal(zscore, 2.0)) %>%
mutate(daysintrade = pairs_trade_days(signal)) %>%
mutate(trade_id = pairs_trade_id(daysintrade)) %>%
mutate(ret = ifelse(daysintrade > 0, log_return * lag(signal),0)) %>%as_tibble()
bt <- lazy_dt(pairs_split) %>%
#filter(stock1=='SG',stock2=='SGEN') %>%
#slice_head(n=10000) %>%
inner_join(lazy_dt(get_prices_zscores(prices)), by=c('stock1'='ticker')) %>%
rename('close1' = 'close',
'sd20_1' = 'sd20',
'zscore_1' = 'zscore') %>%
left_join(lazy_dt(get_prices_zscores(prices)) %>% rename(stock2=ticker), by=c('date','stock2')) %>%
rename('close2' = 'close',
'sd20_2' = 'sd20',
'zscore_2' = 'zscore') %>%
as_tibble() %>%
# Some of the data had prices, then a few zeros, then prices SG is an example
group_by(stock1, stock2) %>%
ftransform(minclose1 = close1) %>%
ftransform(minclose2 = close2) %>%
TRA(fmin(fselect(., minclose1, minclose2), keep.group_vars = FALSE), "replace_fill") %>%
fsubset(minclose1 > 0 & minclose2 > 0) %>%
ftransform(month = month(date)) %>%
ftransform(year = lubridate::year(date)) %>%
# get lsr
ftransform(ratiospread = ifelse(close2 == 0, 0, close1/close2)) %>%
ftransform(spreadclose = log(close1) - log(close2)) %>%
group_by(stock1, stock2) %>%
mutate(sma20 = roll_meanr(spreadclose, n=20)) %>%
mutate(sd20  = roll_sdr(spreadclose, n=20)) %>%
mutate(zscore = ifelse(sd20 == 0, 0, (spreadclose-sma20)/sd20)) %>%
mutate(log_return = log(ratiospread)-log(lag(ratiospread,1))) %>%
mutate(signal = -pairs_trade_signal(zscore, 2.0)) %>%
mutate(daysintrade = pairs_trade_days(signal)) %>%
mutate(trade_id = pairs_trade_id(daysintrade)) %>%
mutate(ret = ifelse(daysintrade > 0, log_return * lag(signal),0)) %>% mutate(cumsum=cumsum(ret)) %>% as_tibble()
pacman::p_load(tidyverse, arrow, RcppRoll, dtplyr, collapse,quantpack, plotly)
source('helper.R')
s1 <- 'PAA'
s2 <- 'PAGP'
get_t <- function(t)
{
quantpack::load_tickers(t) %>%
rename(unadjusted_close=close,close = adjusted_close) %>%
select(date, ticker, close) %>%
as_tibble()
}
lsrbt <- get_t(s1) %>%
left_join(get_t(s2), by='date') %>%
rename(stock1 = ticker.x,
stock2 = ticker.y,
close1 = close.x,
close2 = close.y) %>%
drop_na() %>%
group_by(stock1, stock2) %>%
ftransform(minclose1 = close1) %>%
ftransform(minclose2 = close2) %>%
TRA(fmin(fselect(., minclose1, minclose2), keep.group_vars = FALSE), "replace_fill") %>%
fsubset(minclose1 > 0 & minclose2 > 0) %>%
ftransform(month = lubridate::month(date)) %>%
ftransform(year = lubridate::year(date)) %>%
filter(date >= as.Date('2011-09-1')) %>%
# get lsr
ftransform(ratiospread = ifelse(close2 == 0, 0, close1/close2)) %>%
ftransform(spreadclose = log(close1) - log(close2)) %>%
group_by(stock1, stock2) %>%
mutate(sma20 = roll_meanr(spreadclose, n=20)) %>%
mutate(sd20  = roll_sdr(spreadclose, n=20)) %>%
mutate(sd_20_perc = sd20/spreadclose) %>%
mutate(zscore = ifelse(sd20 == 0, 0, (spreadclose-sma20)/sd20)) %>%
mutate(log_return = log(ratiospread)-log(lag(ratiospread,1))) %>%
mutate(neg_lag_zscore = -lag(zscore,1)) %>%
mutate(lsr = log_return*neg_lag_zscore) %>%
mutate(signal = -pairs_trade_signal(zscore, 2)) %>%
mutate(daysintrade = pairs_trade_days(signal)) %>%
mutate(trade_id = pairs_trade_id(daysintrade)) %>%
mutate(btret = ifelse(daysintrade > 0, log_return * lag(signal),0)) %>%
#filter(trade_id > 0) %>%
filter(year(date) == lubridate::year(date)) %>%
mutate(month = month(date)) %>%
#filter(year == max(year)) %>%
drop_na() %>%
mutate(year_qtr = paste(year, lubridate::quarter(date), sep='-')) %>%
as_tibble()
lsr_br_summ <- lsrbt %>%
group_by(year, month) %>%
summarise(cnt=n(),
lsr_mean = mean(lsr),
lsr_sum = sum(lsr),
lsr_sd = sd(lsr),
bt_mean = mean(btret),
bt_sd = sd(btret),
adj_bt = bt_mean/bt_sd)
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(ret = ret) %>%
mutate(cumret = cumsum(ret)) %>%
group_by(method) %>%
summarise(mean_ret = mean(ret),
sd_ret = sd(ret),
sharpe = mean_ret/sd_ret*sqrt(252))
ggplotly(
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(ret = ret) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret, color=method)) + geom_line()
)
ggplotly(
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(sd_roll = roll_sdr(ret, n=60*6),
mean_roll = roll_meanr(ret, n=60*6),
sharpe = mean_roll/sd_roll*sqrt(252)) %>%
drop_na() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=sharpe, color=method)) + geom_line() + ggtitle('Rolling Sharpe, 3 month')
)
lsrbt %>%
mutate(month = month(date),
year = year(date)) %>%
group_by(year,month) %>%
summarise(meanret = mean(btret),
sdret = sd(btret)) %>%
mutate(sharpe = meanret/sdret*sqrt(252)) %>%
group_by(year) %>%
summarise(btret_ra = mean(sharpe, na.rm=TRUE))
universe_prices <- read_parquet('universe_prices.parquet')
prices <- universe_prices %>%
filter(ticker %in% c(s1, s2)) %>%
filter(between(date, as.Date('2021-11-1'), as.Date('2022-12-31'))) %>%
select(-unadjusted_close, -isUniverse)
bt <- get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
bt <- get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
bt <- get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
arrange(date) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
arrange(date) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
arrange(date) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
pacman::p_load(tidyverse, arrow, RcppRoll, dtplyr, collapse,quantpack, plotly)
source('helper.R')
s1 <- 'AEE'
s2 <- 'FTS'
get_t <- function(t)
{
quantpack::load_tickers(t) %>%
rename(unadjusted_close=close,close = adjusted_close) %>%
select(date, ticker, close) %>%
as_tibble()
}
lsrbt <- get_t(s1) %>%
left_join(get_t(s2), by='date') %>%
rename(stock1 = ticker.x,
stock2 = ticker.y,
close1 = close.x,
close2 = close.y) %>%
drop_na() %>%
group_by(stock1, stock2) %>%
ftransform(minclose1 = close1) %>%
ftransform(minclose2 = close2) %>%
TRA(fmin(fselect(., minclose1, minclose2), keep.group_vars = FALSE), "replace_fill") %>%
fsubset(minclose1 > 0 & minclose2 > 0) %>%
ftransform(month = lubridate::month(date)) %>%
ftransform(year = lubridate::year(date)) %>%
filter(date >= as.Date('2011-09-1')) %>%
# get lsr
ftransform(ratiospread = ifelse(close2 == 0, 0, close1/close2)) %>%
ftransform(spreadclose = log(close1) - log(close2)) %>%
group_by(stock1, stock2) %>%
mutate(sma20 = roll_meanr(spreadclose, n=20)) %>%
mutate(sd20  = roll_sdr(spreadclose, n=20)) %>%
mutate(sd_20_perc = sd20/spreadclose) %>%
mutate(zscore = ifelse(sd20 == 0, 0, (spreadclose-sma20)/sd20)) %>%
mutate(log_return = log(ratiospread)-log(lag(ratiospread,1))) %>%
mutate(neg_lag_zscore = -lag(zscore,1)) %>%
mutate(lsr = log_return*neg_lag_zscore) %>%
mutate(signal = -pairs_trade_signal(zscore, 2)) %>%
mutate(daysintrade = pairs_trade_days(signal)) %>%
mutate(trade_id = pairs_trade_id(daysintrade)) %>%
mutate(btret = ifelse(daysintrade > 0, log_return * lag(signal),0)) %>%
#filter(trade_id > 0) %>%
filter(year(date) == lubridate::year(date)) %>%
mutate(month = month(date)) %>%
#filter(year == max(year)) %>%
drop_na() %>%
mutate(year_qtr = paste(year, lubridate::quarter(date), sep='-')) %>%
as_tibble()
lsr_br_summ <- lsrbt %>%
group_by(year, month) %>%
summarise(cnt=n(),
lsr_mean = mean(lsr),
lsr_sum = sum(lsr),
lsr_sd = sd(lsr),
bt_mean = mean(btret),
bt_sd = sd(btret),
adj_bt = bt_mean/bt_sd)
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(ret = ret) %>%
mutate(cumret = cumsum(ret)) %>%
group_by(method) %>%
summarise(mean_ret = mean(ret),
sd_ret = sd(ret),
sharpe = mean_ret/sd_ret*sqrt(252))
ggplotly(
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(ret = ret) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret, color=method)) + geom_line()
)
ggplotly(
lsrbt %>%
select(date, stock1, stock2, lsr, btret) %>%
pivot_longer(c(lsr, btret),names_to = 'method', values_to = 'ret') %>%
group_by(method) %>%
mutate(sd_roll = roll_sdr(ret, n=60*6),
mean_roll = roll_meanr(ret, n=60*6),
sharpe = mean_roll/sd_roll*sqrt(252)) %>%
drop_na() %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=sharpe, color=method)) + geom_line() + ggtitle('Rolling Sharpe, 3 month')
)
lsrbt %>%
mutate(month = month(date),
year = year(date)) %>%
group_by(year,month) %>%
summarise(meanret = mean(btret),
sdret = sd(btret)) %>%
mutate(sharpe = meanret/sdret*sqrt(252)) %>%
group_by(year) %>%
summarise(btret_ra = mean(sharpe, na.rm=TRUE))
universe_prices <- read_parquet('universe_prices.parquet')
prices <- universe_prices %>%
filter(ticker %in% c(s1, s2)) %>%
filter(between(date, as.Date('2021-11-1'), as.Date('2022-12-31'))) %>%
select(-unadjusted_close, -isUniverse)
get_bt2(data.frame(stock1 = s1,
stock2 = s2),prices, .summary = FALSE) %>%
ungroup() %>%
arrange(date) %>%
mutate(cumret = cumsum(ret)) %>%
ggplot(aes(x=date, y=cumret)) + geom_line()
library(partialCI)
pacman::p_load(partialCI)
pacman::p_load(partialCI)
pacman::p_install_gh('https://github.com/matthewclegg/partialCI')
installr()
pacman::p_load(installr)
library(installr)
updateR()
setwd("D:/Research/EquityPairs")
setwd("D:/Research/EquityPairs")
q
pacman::p_load(tidyverse, arrow, RcppRoll, dtplyr, collapse,quantpack, plotly)
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages('dplyr')
pacman::p_load(plotly)
pacman::p_load(ggplotly)
library(tidyverse)
pacman::p_load(ggplotly)
pacman::p_load(tidyverse, quantpack)
quantpack::load_ticker('SPY', interval = '1m')
pacman::p_load(tidyverse, quantpack, arrow)
quantpack::load_ticker('SPY', interval = '1m')
pacman::p_load(tidyverse, quantpack, arrow, hms)
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Rcpp::compileAttributes()
Rcpp::compileAttributes().
Rcpp::compileAttributes()
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
library(quantpack)
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(close)-log(lag(close())))
library(tidyverse)
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(close)-log(lag(close())))
library(arrow)
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(close)-log(lag(close())))
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(close)-log(lag(close())))
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(Close)-log(lag(Close())))
spy <- quantpack::load_tickers('spy') %>% mutate(log_return = log(close)-log(lag(close())))
spy <- quantpack::load_tickers('spy')
spy
spy %>% mutate(log_return = log(close)-log(lag(close())))
spy %>% mutate(rnt = quantpack::calc_rolling_percentile(close))
remove.packages(quantpack)
remove.packages("quantpack")
devtools::document()
devtools::document()
devtools::document()
Rcpp::compileAttributes().
Rcpp::compileAttributes()
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
devtools::install(paste0('C:\\Users\\', Sys.getenv('USERNAME'), '\\GoogleDrive\\R\\quantpack\\'))
library(tidyverse)
library(quantpack)
load_ticker('spy') %>% mutate(rp = quantpack::calc_rolling_percentile(volume, n=20, na_rm=TRUE))
library(arrow)
load_ticker('spy') %>% mutate(rp = quantpack::calc_rolling_percentile(volume, n=20, na_rm=TRUE))
load_ticker('spy') %>% mutate(rp = quantpack::calc_rolling_percentile(volume, n=20, na_rm=TRUE)) %>% tail()
